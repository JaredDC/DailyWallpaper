<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="hashPicBox.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="hashPicBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DQksCFMXAAAAAElFTkSuQmCC
</value>
  </data>
</root>